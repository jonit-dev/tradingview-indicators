//@version=5
strategy("BTC ‚Äì Fire-stop + White-cross re-entry", overlay=true, initial_capital=10000, default_qty_type=strategy.percent_of_equity, default_qty_value=100)

// --- INPUTS ---
length = input.int(200, "PowerLaw pct length")
upperPct = input.float(90, "Upper percentile")
lowerPct = input.float(45, "Lower percentile")
atrLen = input.int(14, "ATR length")
atrMult = input.float(2, "ATR mult")

// --- DATA ---
btcClose = request.security("BTCUSD", timeframe.period, close)
goldClose = request.security("XAUUSD", timeframe.period, close)
days = (time - timestamp(2009,01,03)) / 86400000
modPrice = math.exp(5.71 * math.log(days) - 38.16)
osc = ((btcClose - modPrice) / modPrice) * 100

// --- PERCENTILE BANDS ---
var arr = array.new_float()
if barstate.isconfirmed
    array.unshift(arr, osc)
    if array.size(arr) > length
        array.pop(arr)

pct(src,p) =>
    tmp = array.copy(src)
    array.sort(tmp, order.ascending)
    idx = math.max(0, math.floor((array.size(tmp) - 1) * p / 100))
    array.get(tmp, idx)

ploUpper = pct(arr, upperPct)
ploLower = pct(arr, lowerPct)

// --- RELATIVE STRENGTH ---
relStr = ta.ema(ta.roc(btcClose,1) - ta.roc(goldClose,1), 14)

// --- SIGNALS ---
fire = osc > ploUpper and relStr > 8
ice = osc < ploLower and relStr < -2
crossUp = ta.crossover(osc, ploLower)

// --- STRATEGY ---
var float stopLevel = na

// Reset stop when position is closed
if strategy.position_size == 0
    stopLevel := na

// Fire condition: Set trailing stop if in position
if fire and strategy.position_size > 0
    newStop = low - atrMult * ta.atr(atrLen)
    // Only update stop if new level is higher (trailing) and valid
    if not na(newStop) and (na(stopLevel) or newStop > stopLevel)
        stopLevel := newStop

// CRITICAL: Apply the exit order on EVERY bar when we have a stop level
if strategy.position_size > 0 and not na(stopLevel)
    strategy.exit("FireStop", from_entry="Long", stop=stopLevel)

// Entry conditions (only when flat)
if crossUp and strategy.position_size == 0
    strategy.entry("Long", strategy.long, comment="CrossUp re-entry")

if ice and strategy.position_size == 0
    strategy.entry("Long", strategy.long, comment="Ice entry")

// First departure from green zone entry (osc was above lower band, now below)
greenZoneDeparture = osc[1] > ploLower and osc < ploLower and strategy.position_size == 0
if greenZoneDeparture
    strategy.entry("Long", strategy.long, comment="Green zone departure")

// --- VISUAL DEBUGGING ---
plot(strategy.position_size > 0 and not na(stopLevel) ? stopLevel : na, "Stop Level", color=color.red, style=plot.style_linebr, linewidth=2)

// --- EMOJI LABELS ---
if fire
    label.new(bar_index, high, "üî•", style=label.style_none, size=size.large, yloc=yloc.abovebar)

if ice
    label.new(bar_index, low, "‚ùÑÔ∏è", style=label.style_none, size=size.large, yloc=yloc.belowbar)
